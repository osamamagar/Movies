{"version":3,"file":"static/js/61.58245402.chunk.js","mappings":"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","sources":["components/Star/Stars.js","components/rating/rating.js","components/movies/movieCard.js","components/pagePagination/pagePagination.js","components/recommendation/recommendation.js","pages/movieDetails.js"],"sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStar as fullStar, faStarHalfStroke } from '@fortawesome/free-solid-svg-icons'\nimport { faStar as emptyStar } from '@fortawesome/free-regular-svg-icons'\n\nexport default function Stars (props) {\n    let {rating } = props\n    \n\nconst stars = []\n    for (let x=0; x < 5; x++){\n        if (rating >= 1) {\n            stars.push(<FontAwesomeIcon icon={fullStar} key={x} style={{color:\"black\"}} className='color-info'/>)\n            rating -= 1\n        } else if ( 0 < rating ) {\n            stars.push(<FontAwesomeIcon icon={faStarHalfStroke} key={x} style={{color:\"black\"}}/>)\n            rating = 0\n        } else {\n            stars.push(<FontAwesomeIcon icon={emptyStar} key={x} style={{color:\"black\"}}/>)\n        }\n    }\n\n    return <div className=\"rating \">{stars}</div>\n}","import './rating.css'\nimport React from 'react'  \nfunction Rating(props){\nconst {rating} = props\n return (\n    <>\n      <div className={rating < 50 ? \"position-absolute rate bad\" \n        : rating < 70 ? \"position-absolute rate median\" \n        : \"position-absolute rate good\"} \n       style={rating < 50 ? {background: `conic-gradient(red ${rating}%, transparent 0 100%)`}\n        : rating < 70 ? {background: `conic-gradient(orange ${rating}%, transparent 0 100%)`} \n        : {background: `conic-gradient(green ${rating}%, transparent 0 100%)`}}><span>{rating}<small>%</small></span></div> \n    </> \n )\n}\nexport default Rating;\n","import Rating from '../rating/rating'\r\nimport { useState, useEffect} from \"react\";\r\nimport { useDispatch ,useSelector} from \"react-redux\";\r\nimport { handleAction } from \"../../store/slices/watchList\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons'\r\nimport './card.css'\r\nexport default function MovieCard(props) {\r\n  \r\n  const { movieDetails, handleNavigate } = props;\r\n  var isActive = false\r\n  const watchList = useSelector((state) => state.watchList);\r\n  const dispatch = useDispatch();\r\n  watchList.listedMovies?.map((movie, index) => {\r\n    if (movie.id == movieDetails.id){ \r\n      isActive = true\r\n    }\r\n  })\r\n  return (\r\n    <>\r\n    <div className=\"card position-relative mt-3\" style={{height:'400px'}}>\r\n      <Rating rating={movieDetails.vote_average*10}/>\r\n      <img src={`https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`} \r\n      className=\"card-img-top h-75\" alt=\"...\" onClick={() => handleNavigate(movieDetails.id)}/>\r\n      <div className=\"card-body position-relative mt-4\">\r\n        <div className=\"row\">\r\n          <p className=\"card-title col-9 my-auto\"\r\n          style={{textOverflow:'ellipsis',overflow:'hidden',whiteSpace:'nowrap', fontWeight: 'bold'}}\r\n          >{movieDetails.title}</p>\r\n          \r\n          <div className='col-1 my-auto text-muted'>\r\n            <input className=\"love\" style={{display: 'none'}} type=\"checkbox\" \r\n            defaultChecked={isActive} id={movieDetails.id}/>\r\n            <label className='my-auto love' htmlFor={movieDetails.id} \r\n            onClick={() => {dispatch(handleAction(movieDetails))}}>\r\n              <FontAwesomeIcon className='fs-5 my-auto' icon={faHeart} />\r\n            </label> \r\n          </div>\r\n           \r\n        </div>\r\n        <p>{movieDetails.release_date}</p>\r\n      </div> \r\n    </div>\r\n    \r\n    </>\r\n    \r\n  );\r\n}\r\n","import React from 'react'  \nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons'\nimport { faAngleLeft } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nfunction PagePagination(props){\n  const { increase, decrease, setPage, totalPages} = props;\n  var pages = []\n  for (let i = 1 ; i <= 20 ; i++) {\n    if(i > totalPages){\n      break\n    }\n    pages.push(i)\n  }\n\n  return (\n    <>\n      <div className='fixed-bottom bg-light w-100 d-flex' style={{height: '40px', justifyContent: 'center'}}>\n        <div className='btn btn-warning my-auto mx-4' onClick={() => {decrease()}}>\n          <FontAwesomeIcon icon={faAngleLeft} />\n        </div>\n        <div style={{width: '200px'}}>\n          <p style={{textOverflow:'ellipsis',overflow:'hidden',whiteSpace:'nowrap'}}> \n          {pages?.map((page, index) => {\n            return(\n              <span className='my-auto btn'  key={page} onClick={() => {setPage(page)}}>{page}</span>\n            );\n          })}\n          </p>\n        </div>\n        <div className='btn btn-warning my-auto mx-4' onClick={() => {increase()}}>\n          <FontAwesomeIcon icon={faAngleRight} />\n        </div>\n      </div>\n    </> \n )\n}\nexport default PagePagination;\n","import { useEffect,useContext, useState } from \"react\";\nimport MovieCard from \"../movies/movieCard\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios'\nimport PagePagination from '../pagePagination/pagePagination'\nimport { LanguageContext } from '../../context/language';\n\n\nconst Recommendation = (props) => {\n    const {movieId} = props\n    const navigate = useNavigate();\n    const [recommend, setRecommend] = useState([]);\n    const [pages, setPages] = useState(1);\n    const [page, setPage] = useState(1);\n    const { contextLang , setContextLang }  = useContext(LanguageContext)\n\n    useEffect(() => {\n      axios\n        .get(` https://api.themoviedb.org/3/movie/${movieId}/recommendations?api_key=d31d8bb09970c0c573668146ab0702f3&page=${page}&language=${contextLang}`)\n        .then((res) => {setRecommend(res.data.results); setPages(res.data.total_pages)})\n        .catch((err) => console.log(err));\n    },[page,movieId,contextLang]);\n  \n    const redirectToDetails = (id) => {\n      navigate(`/movie-details/${id}`);\n    };\n    const navigateToPage = (page) => {\n        setPage(page)\n      }\n    \n      const increaseCount = () => {\n        if (page < pages){\n          setPage(page+1)\n        }\n      }\n      const decreaseCount = () => {\n        if (page > 1){\n          setPage(page-1)\n        }\n      }\n    return (\n      <div className=\"row\">\n        {recommend?.map((movie, index) => {\n          return (\n            <div className=\"col-2\" key={movie.id}>\n              <MovieCard\n                movieDetails={movie}\n                handleNavigate={redirectToDetails}\n              />\n            </div>\n          );\n        })}\n        <PagePagination \n          increase={increaseCount}\n          decrease={decreaseCount}\n          setPage={navigateToPage}\n          totalPages={pages} \n        />\n      </div>\n    );\n  };\n  \n  export default Recommendation;\n  ","import React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router\";\nimport axios from \"axios\";\nimport \"./movieDetails.css\";\nimport Stars from \"../components/Star/Stars\";\nimport { LanguageContext } from '../context/language';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { useDispatch ,useSelector} from \"react-redux\";\nimport { handleAction } from \"../store/slices/watchList\";\nimport Recommendation from '../components/recommendation/recommendation'\n\nexport default function MovieDetails() {\n  var isActive = false\n  const imageBaseUrl = \"https://image.tmdb.org/t/p/w500\";\n  const { contextLang , setContextLang }  = useContext(LanguageContext)\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { id } = useParams();\n  const watchList = useSelector((state) => state.watchList);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/${id}?api_key=d31d8bb09970c0c573668146ab0702f3&language=${contextLang}`\n      )\n      .then((res) => {\n        setMovieDetails(res.data);\n      })\n      .catch((err) => console.error(err));\n  }, [id, contextLang]);\n\n  watchList?.listedMovies?.map((movie, index) => {\n    if (movie.id == movieDetails?.id){ \n      isActive = true\n    }\n  })\n  const labelStyle = {\n    marginLeft: '450px'\n  };\n\n\n  if (!movieDetails) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <div className=\"container\" dir={contextLang === 'ar' ? 'rtl' : 'ltr'}>\n        <div className=\"row\">\n          <div className=\"col-md-4 \">\n            <div className=\"card\">\n              <img\n                className=\"card-img-top \"\n                src={`${imageBaseUrl}/${movieDetails.poster_path}`}\n                alt={movieDetails.title}\n              />\n            </div>\n          </div>\n          <div className=\"col-md-8 \">\n            <br />\n            <div className=\"row\">\n              <h3 className=\"col title-details\">{movieDetails.title}</h3>\n              <div className='col my-auto text-muted'>\n                <input className=\"love\" style={{display: 'none'}} type=\"checkbox\" \n                defaultChecked={isActive} id={movieDetails.id}/>\n                <label className='my-auto love' style={labelStyle} htmlFor={movieDetails.id} \n                onClick={() => {dispatch(handleAction(movieDetails))}}>\n                  <FontAwesomeIcon className='fs-3 my-auto'icon={faHeart} />\n                </label> \n              </div>\n            </div>\n            \n            <p className=\"release-date-details\">{movieDetails.release_date}</p>\n            <Stars rating={movieDetails.vote_average / 2} />\n            <p>{movieDetails.vote_count}</p>\n            <br />\n            <br />\n            <p className=\"overview-details\">{movieDetails.overview}</p>\n            <br />\n            <br />\n            <div className=\"row\">\n            <div className=\"col\">\n            <h6>Production Countries:</h6>\n            <ul>\n              {movieDetails.production_countries.map((country) => (\n                <li key={country.iso_3166_1}>{country.name}</li>\n              ))}\n            </ul><br/>\n            <h6>Languages Available:</h6>\n            <ul>\n              {movieDetails.spoken_languages.map((language) => (\n                <li key={language.iso_639_1}>{language.name}</li>\n              ))}\n            </ul>\n            </div>\n            <div className=\"col-7 text-center\"><br/><br/><br/>\n              {movieDetails.genres.length > 0 && movieDetails.genres[0] && (\n                <button className=\"btn btn-warning mx-4 \" >\n                  <p className=\"my-auto\">{movieDetails.genres[0].name}</p>\n                </button>\n              )}\n              {movieDetails.genres.length > 1 && movieDetails.genres[1] && (\n                <button className=\"btn btn-warning\" >\n                  <p className=\"my-auto\">{movieDetails.genres[1].name}</p>\n                </button>\n              )}\n              {movieDetails.genres.length > 2 && movieDetails.genres[2] && (\n                <button className=\"btn btn-warning mx-4\" >\n                  <p className=\"my-auto\">{movieDetails.genres[2].name}</p>\n                </button>\n              )}\n            </div>\n            <br />\n            <br />\n            </div>  \n          </div>\n        </div>\n      </div>\n\n      <div className=\"container\">\n        <hr />\n        <h2>Recommendations</h2>\n        <Recommendation movieId={movieDetails.id}/>\n      </div>\n    </>\n  );\n}\n"],"names":["Stars","props","rating","stars","x","push","_jsx","FontAwesomeIcon","icon","fullStar","style","color","className","faStarHalfStroke","emptyStar","children","_Fragment","background","concat","_jsxs","MovieCard","_watchList$listedMovi","movieDetails","handleNavigate","isActive","watchList","useSelector","state","dispatch","useDispatch","listedMovies","map","movie","index","id","height","Rating","vote_average","src","poster_path","alt","onClick","textOverflow","overflow","whiteSpace","fontWeight","title","display","type","defaultChecked","htmlFor","handleAction","faHeart","release_date","increase","decrease","setPage","totalPages","pages","i","justifyContent","faAngleLeft","width","page","faAngleRight","movieId","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","recommend","setRecommend","_useState3","_useState4","setPages","_useState5","_useState6","_useContext","useContext","LanguageContext","contextLang","setContextLang","useEffect","axios","get","then","res","data","results","total_pages","catch","err","console","log","redirectToDetails","PagePagination","MovieDetails","setMovieDetails","useParams","error","dir","marginLeft","vote_count","overview","production_countries","country","name","iso_3166_1","spoken_languages","language","iso_639_1","genres","length","Recommendation"],"sourceRoot":""}